<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="splitContainer2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAI
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wEBAf8CAgL/AwMD/wQEBP8FBQX/BgYG/wcHB/8ICAj/CQkJ/woK
        Cv8LCwv/DAwM/w0NDf8ODg7/Dw8P/xAQEP8RERH/EhIS/xMTE/8UFBT/FRUV/xYWFv8YGBj/Ghoa/xwc
        HP8dHR3/Hh4e/yAgIP8hISH/IiIi/yMjI/8kJCT/JSUl/yYmJv8oKCj/KSkp/yoqKv8xMTH/MjIy/zMz
        M/81NTX/ODg4/zk5Of86Ojr/PDw8/z09Pf8+Pj7/Pz8//0BAQP9BQUH/Q0ND/0RERP9FRUX/R0dH/01N
        Tf9OTk7/T09P/1FRUf9SUlL/U1NT/1RUVP9VVVX/VlZW/1dXV/9ZWVn/Wlpa/1tbW/9cXFz/XV1d/15e
        Xv9fX1//YGBg/2FhYf9iYmL/Y2Nj/2RkZP9lZWX/Z2dn/2hoaP9paWn/ampq/21tbf9ubm7/b29v/3Fx
        cf9ycnL/c3Nz/3R0dP91dXX/dnZ2/3h4eP95eXn/e3t7/3x8fP99fX3/fn5+/39/f/+AgID/gYGB/4KC
        gv+EhIT/hYWF/4aGhv+Hh4f/iIiI/4qKiv+Li4v/jY2N/4+Pj/+SkpL/k5OT/5WVlf+YmJj/mZmZ/5ub
        m/+dnZ3/n5+f/6Ghof+ioqL/o6Oj/6SkpP+lpaX/pqam/6ioqP+pqan/q6ur/6ysrP+tra3/sLCw/7Ky
        sv+1tbX/tra2/7e3t/+6urr/u7u7/7y8vP+9vb3/v7+//8DAwP/BwcH/wsLC/8PDw//Hx8f/yMjI/8rK
        yv/Ly8v/zMzM/83Nzf/Ozs7/z8/P/9DQ0P/S0tL/09PT/9TU1P/V1dX/1tbW/9fX1//Y2Nj/29vb/9zc
        3P/d3d3/3t7e/9/f3//g4OD/4eHh/+Li4v/j4+P/5OTk/+Xl5f/m5ub/5+fn/+jo6P/p6en/6urq/+vr
        6//s7Oz/7e3t/+7u7v/v7+//8PDw//Hx8f/y8vL/8/Pz//T09P/19fX/9vb2//f39//4+Pj/+fn5//r6
        +v/7+/v//Pz8//39/f/+/v7//////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAMPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PD
        w8PDvcLDw8PDv666w8PDw8GptMPDw8PDw8PDw8PDw8PDw65UlsHDw7+JJ1m0w8PBoDJcscPDw8PDw8PD
        w8PDw8OvQwEekcDAjSmdWk+ywqE1AANXrcLDw8PDw8PDw8PDs0cBAAAdjZIrmMPBYUWVNwEAAAJPrMLD
        w8PDw8PDw7RPAAAAAAAmLpDDw8PBXk4KAAAAAAFHqsLDw8PDw8O1VgEAAAAAFpM6hr/DwqpCX4EJAQAA
        AAFCp8LDw8PDt1sBAAAAABKMPQARgb6uRwABV4NHAAAAAAA8pcLDw7ljBQAAAAAOjEMAAAAPdk8BAAAU
        jYoAAAAAAAE5tMPDhgUAAAAADolGAAAAAAAjEgAAAAABHwMAAAAAAC62w8O8QwAAAAyFTgAAAAAAH6KO
        EwAAAAAAAAAAAAAorcPDw8O9TgAIhFIAAAAAABqdw8OUFwAAAAAAAAAAJarDw8PDw8O+Tn1bAQAAAAAX
        m8PDw8OZGQAAAAAAACCmw8PDw8PDw61CYAIAAAAAF5XDw8PDw8OcHAAAAAAcn8PDw8PDuqOjSGXBZAIA
        ABWPw8PDw8PDw8OgIQAAGpzDw8PDw75mEhdRwsPBawEMi8PDw8PDw8PDw8OnIhSaw8PDw8PDtBgAAFbD
        w8O4Qmm9w8PDw8PDw8PDw7dlPrDDw8PDw8O+LQAAWL/DuXsOGIW8w8PDw8PDw8O3cgoBS63Cw8PDw8Or
        Z3EvfLV8EQAAFIC8w8PDw8PDuXQNAAAAQavCw8PDw8PDw680VhYAAAAAE3u7w8PDw7p6DwAAAAAAO6jC
        w8PDw8PDvH96RAAAAAAADXe5w8O7fxAAAAAAAAABOKTCw8PDw72IGxCKUAAAAAAAC3O5vIEVAAAAAAAA
        AAAANqHCw8O/ix8AABKHUQAAAAAACm+CGQAAAAAAAAAAAAAAL6nDw64kAAAAAAmEWQEAAAAACyIAAAAA
        FUofAAAAAAAHisPDwFUBAAAAAAqAXAAAAABqlxoAAAJ1sA4AAAAAA3TDw8PDwmICAAAAAAd+YAIBY8PD
        nhwAS4swAAAAAANww8PDw8PDwWkCAAAAAAZ4YlnBw8PDnUmNFAAAAAABbMLDw8PDw8PDwm0CAAAAAAZT
        TLDDw713PzAAAAAAAmXCw8PDw8PDw8PDw3AFAAAATb5oQK6+fTGyqCkAAAJdwsPDw8PDw8PDw8PDwncE
        AEO/w8JuOXksrMPDsCoAV8HDw8PDw8PDw8PDw8PDw35IvcPDw8N2M6jDw8PDtG/Bw8PDw8PDw8PDw8PD
        w8PDw8LDw8PDw8PCw8PDw8PDw8PDw8PDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AQEB/wICAv8DAwP/BAQE/wUFBf8HBwf/CAgI/wkJCf8XFxf/GRkZ/xoa
        Gv8dHR3/Hh4e/yAgIP8hISH/IiIi/yQkJP8lJSX/Jycn/ysrK/8zMzP/NjY2/zg4OP86Ojr/Pj4+/0BA
        QP9BQUH/RUVF/0ZGRv9ISEj/TExM/1FRUf9WVlb/WVlZ/1xcXP9dXV3/Xl5e/19fX/9jY2P/ZGRk/2Vl
        Zf9mZmb/aGho/2lpaf9sbGz/bW1t/25ubv90dHT/dnZ2/3d3d/95eXn/enp6/319ff9/f3//gYGB/4OD
        g/+FhYX/h4eH/4iIiP+NjY3/j4+P/5CQkP+SkpL/k5OT/5WVlf+YmJj/mpqa/5ycnP+enp7/oKCg/6Oj
        o/+pqan/rKys/66urv+xsbH/tLS0/7W1tf+2trb/uLi4/8fHx//R0dH/09PT/9bW1v/b29v/3Nzc/93d
        3f/f39//4eHh/+Li4v/k5OT/5+fn/+jo6P/q6ur/8fHx//T09P/19fX/9vb2//f39//4+Pj/+fn5//r6
        +v/7+/v//Pz8//39/f/+/v7//////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAAAampqamlqamljampjZmpqampqamUuSmlJNVFhIjJkampqamYvAAc2TWpB
        JwABLWNqamcyAAAYI0VjKyseAAAoYmo8AQAWJgAEIAAFLAEAAERqUgsVJwAAHVwZAAAAACBlampIKwAA
        GmBqXxwAAB5jalY0QFcRF15qamphHxtgamo+AE9oN0FoampqZzosZGpqZFA5OwQFQmhqaD8DACljampp
        RjALAAM9ZkMEAAAAJGFqTAgFMw0AAyUGAA0IAAA0alQPAAMxDg9THApHBAATW2pqWBIAAipLalUvBQAQ
        WWpqampaFAlTRE44XyEMVmpqampqal1TampPY2pmWmpqagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>